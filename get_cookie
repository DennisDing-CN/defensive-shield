import datetime
import random
import httpx
import time
import undetected_chromedriver
from selenium.webdriver.common.by import By
from pyvirtualdisplay import Display

# 静态代理
PROXY_LIST = [
    "http://104.223.212.10:65432", "http://104.223.212.101:65432", "http://104.223.212.104:65432",
    "http://104.223.212.106:65432", "http://104.223.212.110:65432", "http://104.223.212.112:65432",
    "http://104.223.212.114:65432", "http://104.223.212.116:65432", "http://104.223.212.12:65432",
    "http://104.223.212.123:65432", "http://104.223.212.125:65432", "http://104.223.212.127:65432",
    "http://104.223.212.129:65432", "http://104.223.212.131:65432", "http://104.223.212.133:65432",
    "http://104.223.212.136:65432", "http://104.223.212.138:65432", "http://104.223.212.14:65432",
    "http://104.223.212.142:65432", "http://104.223.212.144:65432", "http://104.223.212.146:65432",
    "http://104.223.212.148:65432", "http://104.223.212.155:65432", "http://104.223.212.157:65432",
    "http://104.223.212.159:65432", "http://104.223.212.16:65432", "http://104.223.212.161:65432",
    "http://104.223.212.163:65432", "http://104.223.212.165:65432", "http://104.223.212.168:65432",
    "http://104.223.212.170:65432", "http://104.223.212.172:65432", "http://104.223.212.174:65432",
    "http://104.223.212.176:65432", "http://104.223.212.178:65432", "http://104.223.212.18:65432",
    "http://104.223.212.180:65432", "http://104.223.212.185:65432", "http://104.223.212.187:65432",
    "http://104.223.212.189:65432", "http://104.223.212.191:65432", "http://104.223.212.193:65432",
    "http://104.223.212.195:65432", "http://104.223.212.197:65432", "http://104.223.212.2:65432",
    "http://104.223.212.20:65432", "http://104.223.212.200:65432", "http://104.223.212.202:65432",
    "http://104.223.212.204:65432", "http://104.223.212.206:65432", "http://104.223.212.208:65432",
    "http://104.223.212.210:65432", "http://104.223.212.212:65432", "http://104.223.212.219:65432",
    "http://104.223.212.221:65432", "http://104.223.212.223:65432", "http://104.223.212.225:65432",
    "http://104.223.212.227:65432", "http://104.223.212.232:65432", "http://104.223.212.234:65432",
    "http://104.223.212.236:65432", "http://104.223.212.238:65432", "http://104.223.212.240:65432",
    "http://104.223.212.242:65432", "http://104.223.212.244:65432", "http://104.223.212.251:65432",
    "http://104.223.212.253:65432", "http://104.223.212.27:65432", "http://104.223.212.29:65432",
    "http://104.223.212.3:65432", "http://104.223.212.31:65432", "http://104.223.212.33:65432",
    "http://104.223.212.35:65432", "http://104.223.212.37:65432", "http://104.223.212.40:65432",
    "http://104.223.212.42:65432", "http://104.223.212.44:65432", "http://104.223.212.46:65432",
    "http://104.223.212.48:65432", "http://104.223.212.5:65432", "http://104.223.212.50:65432",
    "http://104.223.212.52:65432", "http://104.223.212.59:65432", "http://104.223.212.61:65432",
    "http://104.223.212.63:65432", "http://104.223.212.65:65432", "http://104.223.212.67:65432",
    "http://104.223.212.69:65432", "http://104.223.212.72:65432", "http://104.223.212.74:65432",
    "http://104.223.212.76:65432", "http://104.223.212.78:65432", "http://104.223.212.80:65432",
    "http://104.223.212.82:65432", "http://104.223.212.84:65432", "http://104.223.212.91:65432",
    "http://104.223.212.93:65432", "http://104.223.212.95:65432", "http://104.223.212.97:65432",
    "http://104.223.212.99:65432"
]


class GetCookie:
    def __init__(self, url, cookie_count=1):  # key格式为source:redis_key
        self.url = url
        if not cookie_count:
            self.count = 1
        else:
            self.count = int(cookie_count)
        self.run()

    def get_cookies(self):
        remnant = None
        for i in range(3):
            try:
                proxy = random.choice(PROXY_LIST)
                option = undetected_chromedriver.options.ChromeOptions()
                option.add_argument('--incognito')  # 无痕模式
                if proxy:
                    option.add_argument('--proxy-server=' + proxy)
                browser = undetected_chromedriver.Chrome(version_main=110, options=option)  # 指定chromedriver版本
                print("正在获取cookies..")
                browser.get(self.url)
                time.sleep(12)
                try:
                    verify = browser.find_element(By.XPATH, "//div/iframe")
                    browser.switch_to.frame(verify)
                    time.sleep(1)
                    browser.find_element(By.XPATH, "//div[@class='ctp-checkbox-container']//span[@class='mark']").click()
                    print("点击了Cludeflare！")
                    time.sleep(12)
                except:
                    pass

                try:
                    browser.switch_to.default_content()
                    time.sleep(1)
                except:
                    pass

                try:
                    browser.find_element(By.XPATH, "//input[@class='big-button pow-button']").click()
                    print("点击了确定是人类！")
                    time.sleep(5)
                except:
                    pass

                try:
                    browser.find_element(By.XPATH, "//*[@id='challenge-stage']/div/input").click()
                    print("点击了确定是人类！")
                    time.sleep(5)
                except:
                    pass

                # 刷新
                browser.get(self.url)
                time.sleep(3)
                browser.save_screenshot(f"D:\Pypractise\sucess.png")
                useragent = browser.execute_script("return navigator.userAgent")
                cookie_list = browser.get_cookies()
            except Exception as e:
                print("错误:", e)
                break
            else:
                cookies = ""
                for cookie in cookie_list:
                    cookies += cookie['name'] + '=' + cookie['value'] + '; '
                cookies = cookies.strip('; ')
                headers = {
                    'User-Agent': useragent,
                    'Cookie': cookies,
                }
                print("获取到cookies:", headers)
                browser.quit()
                print("正在测试请求...")
                proxy_ip = {"http://": proxy, "https://": proxy}
                res = httpx.get(self.url, headers=headers, proxies=proxy_ip, timeout=10)
                print(res)
                print("使用代理:", proxy)
                meta = headers
                meta['proxy'] = proxy
                meta['status'] = res.status_code
                if res.status_code == 200:
                    return meta
                else:
                    remnant = meta
        else:
            if remnant:
                return remnant
            return None

    # def save_redis(self, data):
    #     try:
    #         pool = redis.ConnectionPool(host=REDIS_HOST, port=REDIS_PORT, password=REDIS_PWD, db=6,
    #                                     decode_responses=True,
    #                                     max_connections=20)
    #         rds = redis.Redis(connection_pool=pool, decode_responses=True)
    #     except Exception as e:
    #         print("连接redis失败!", e)
    #     else:
    #         try:
    #             result = rds.set(self.key, data)
    #         except Exception as e:
    #             print("插入redis失败!", e)
    #         else:
    #             print("插入redis状态:", result)
    #         rds.close()

    def run(self):
        cookies_data = {
            'date': datetime.datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S'),
            'cookie_list': []
        }

        for i in range(self.count):
            try:
                result = self.get_cookies()
            except Exception as e:
                print("get_cookies错误!", e)
            else:
                if result:
                    cookies_data['cookie_list'].append(result)
            print("--"*30)
        print("当前任务完成!")
        print("=="*40)


if __name__ == '__main__':
    print("===启动Xvfb..")
    # display = Display(visible=False, size=(900, 800))
    # display.start()
    try:
        server = GetCookie("https://www.joinsmarty.com/sheetsgigglesinc-coupons", 1)
    except Exception as e:
        print(e)
    # display.stop()
